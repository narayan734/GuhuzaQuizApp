generator client {
  provider   = "prisma-client-js"
  engineType = "library"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:Narayan.1234@localhost:3306/guhuza_quizz"
}

model level {
  Level_Id     Int          @id @default(autoincrement())
  Level_Title  String
  Level_number Int
  player       player[]
  quizResults  quizResult[]
}

model milestone {
  Milestone_Id             Int    @id @default(autoincrement())
  Milestone_Title          String
  Milestone_description    String
  UnlockingLevel           Int
  Milestone_reward_message String
  Milestone_Link           String
  Milestone_Button_CTA     String

  players player[] @relation("PlayerMilestones")
}

model player {
  Player_ID   Int      @id @default(autoincrement())
  Player_name String
  Playerpoint Int
  streak      Int
  lastLogin   DateTime
  Level_Id    Int?
  badge       String   @default("None")
   correctStreak Int     @default(0)
  referrals     Int     @default(0) 
  invitesSent   Int      @default(0)  

  level          level?          @relation(fields: [Level_Id], references: [Level_Id], map: "Player_Level_Id_fkey")
  milestones     milestone[]     @relation("PlayerMilestones")
  quizResults    quizResult[]
  claimedRewards ClaimedReward[]

  @@index([Level_Id], map: "Player_Level_Id_fkey")
}

model quizResult {
  id        Int      @id @default(autoincrement())
  player    player   @relation(fields: [playerId], references: [Player_ID])
  playerId  Int
  level     level    @relation(fields: [levelId], references: [Level_Id])
  levelId   Int
  correct   Int
  incorrect Int
  createdAt DateTime @default(now())
  score     Int      @default(0)

  @@unique([playerId, levelId])
}

model ClaimedReward {
  id        Int      @id @default(autoincrement())
  player    player   @relation(fields: [playerId], references: [Player_ID])
  playerId  Int
  rewardId  Int
  claimedAt DateTime @default(now())

  @@unique([playerId, rewardId]) // Prevent duplicate claims
}
